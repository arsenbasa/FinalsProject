import java.util.Scanner;

public class Main {
    private static SupplierManager supplierManager = new SupplierManager();
    private static OrderManager orderManager = new OrderManager();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n--- A & G Supplier Management ---");
            System.out.println("1. Add Supplier");
            System.out.println("2. List Suppliers");
            System.out.println("3. Create Purchase Order");
            System.out.println("4. List Purchase Orders");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 
            switch (choice) {
                case 1:
                    addSupplier();
                    break;
                case 2:
                    supplierManager.listSuppliers();
                    break;
                case 3:
                    createPurchaseOrder();
                    break;
                case 4:
                    orderManager.listOrders();
                    break;
                case 5:
                    System.out.println("Thank you for using A & G Supplier Management!");
                    return;
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
    }

    private static void addSupplier() {
        System.out.print("Enter Supplier ID: ");
        String id = scanner.nextLine();
        System.out.print("Enter Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Contact Info: ");
        String contact = scanner.nextLine();
        System.out.print("Enter Rating (1-5): ");
        int rating = scanner.nextInt();
        scanner.nextLine(); 

     
        System.out.print("Enter Supplier Type (Outsourcing/Service/Commodity): ");
        String type = scanner.nextLine();

        Supplier supplier;
        switch (type.toLowerCase()) {
            case "outsourcing":
                supplier = new OutsourcingSupplier(id, name, contact, rating);
                break;
            case "service":
                supplier = new ServiceSupplier(id, name, contact, rating);
                break;
            case "commodity":
                supplier = new CommoditySupplier(id, name, contact, rating);
                break;
            default:
                System.out.println("Invalid supplier type. Supplier not added.");
                return;
        }
        supplierManager.addSupplier(supplier);
        System.out.println("Supplier added successfully.");
    }

    private static void createPurchaseOrder() {
        System.out.print("Enter Order ID: ");
        String orderID = scanner.nextLine();
        System.out.print("Enter Supplier ID: ");
        String supplierID = scanner.nextLine();

        Supplier supplier = supplierManager.findSupplier(supplierID);
        if (supplier == null) {
            System.out.println("Supplier not found!");
            return;
        }
        System.out.print("Enter Order Date: ");
        String orderDate = scanner.nextLine();
        PurchaseOrder order = new PurchaseOrder(orderID, supplierID, orderDate);
        while (true) {
            System.out.print("Add another item to order? (y/n): ");
            String addItem = scanner.nextLine();
            if (addItem.equalsIgnoreCase("n")) break;

            System.out.print("Enter Item ID: ");
            String itemID = scanner.nextLine();
            System.out.print("Enter Description: ");
            String description = scanner.nextLine();
            System.out.print("Enter Quantity: ");
            int quantity = scanner.nextInt();
            System.out.print("Enter Price: ");
            double price = scanner.nextDouble();
            scanner.nextLine(); 

            System.out.print("Is this a perishable product? (y/n): ");
            String isPerishable = scanner.nextLine();
            Product product;

            if (isPerishable.equalsIgnoreCase("y")) {
                System.out.print("Enter Expiry Date: ");
                String expiryDate = scanner.nextLine();
                product = new PerishableProduct(itemID, description, quantity, price, expiryDate);
            } else {
                product = new NonPerishableProduct(itemID, description, quantity, price);
            }
            order.addItem(product); 
        }
        orderManager.addOrder(order);
        System.out.println("Purchase Order created successfully.");
    }
}
